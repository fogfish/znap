##
##
## Copyright (C) 2016 Zalando SE
##
## This software may be modified and distributed under the terms
## of the MIT license.  See the LICENSE file for details.
##
## @doc
##   senza template for stups.io / aws cloud formation
SenzaInfo:
   StackName: znap
   Parameters:
      - ImageVersion:
         Description: "docker image version of application."
      - AZ:
         Description: "availability zone"
         Default: a
      - EC2:
         Description: "aws Instance type"
         Default: "t2.small"
      - AppId:
         Description: "Yourturn application id (see stups.io)"
         Default: znap
      - Streams:
         Description: "Stream configurations"
      - Mint:
         Description: "Mint bucket identity (see stups.io)"

SenzaComponents:
   - Configuration:
      Type: Senza::StupsAutoConfiguration

   - ZnapCluster:
      Type: Senza::TaupageAutoScalingGroup
      InstanceType: "{{Arguments.EC2}}"
      AutoScaling:
         Minimum: 1
         Maximum: 1
         MetricType: CPU
      SecurityGroups:
         - Fn::GetAtt:
            - ZnapSg
            - GroupId
      IamRoles:
         - Ref: ZnapRole
      AssociatePublicIpAddress: false
      TaupageConfig:
         root: true
         application_id: "{{Arguments.AppId}}"
         application_version: "{{Arguments.ImageVersion}}"
         mint_bucket: "{{Arguments.Mint}}"
         runtime: Docker
         networking: host
         source: "registry.opensource.zalan.do/ie/znap:{{Arguments.ImageVersion}}"
         ports:
            8080: 8080
         environment:
            ZNAP_STREAMS: "{{Arguments.Streams}}"

   - ZnapELB:
      Type: Senza::WeightedDnsElasticLoadBalancer
      Scheme: internal
      HTTPPort: 8080
#      HealthCheckPath: /health/ping
      SecurityGroups:
         - Fn::GetAtt:
            - ZnapElbSg
            - GroupId
      Listeners:
         - InstancePort: 8080
           InstanceProtocol: HTTP
           LoadBalancerPort: 80
           Protocol: HTTP

Resources:
   ZnapElbSg:
      Type: AWS::EC2::SecurityGroup
      Properties:
         GroupDescription: Znap Load Balancer
         SecurityGroupIngress:
         -  IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0

   ZnapSg:
      Type: AWS::EC2::SecurityGroup
      Properties:
         GroupDescription: Znap Cluster Sg
         SecurityGroupIngress:
         ## ssh access only to bastion host
         -  IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            SourceSecurityGroupName: "Odd (SSH Bastion Host)"

         ## http access only to load balancer
         -  IpProtocol: tcp
            FromPort: 8080
            ToPort: 8080
            SourceSecurityGroupId:
               Fn::GetAtt:
                  - ZnapElbSg
                  - GroupId

   ZnapRole:
      Type: AWS::IAM::Role
      Properties:
         AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
            -  Effect: Allow
               Principal:
                  Service: ec2.amazonaws.com
               Action: sts:AssumeRole
         Path: /
         Policies:
           -   PolicyName: AmazonEC2Describe
               PolicyDocument:
                  Version: "2012-10-17"
                  Statement:

                  ## give permissions to read application config
                  -  Effect: Allow
                     Action:
                        - s3:GetObject
                     Resource: arn:aws:s3:::{{Arguments.Mint}}/{{Arguments.AppId}}/*
